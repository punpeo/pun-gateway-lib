// Code generated by goctl. DO NOT EDIT.
// Source: control.proto

package controlClient

import (
	"context"
	"github.com/punpeo/pun-gateway-lib/access/control/control"
	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckStaffReq                       = control.CheckStaffReq
	CheckStaffResp                      = control.CheckStaffResp
	GetAdminDataControlReq              = control.GetAdminDataControlReq
	GetAdminDataControlResp             = control.GetAdminDataControlResp
	GetAdminDetailReq                   = control.GetAdminDetailReq
	GetAdminDetailResp                  = control.GetAdminDetailResp
	GetAdminDetailRoleListItem          = control.GetAdminDetailRoleListItem
	GetAdminFuncControlItem             = control.GetAdminFuncControlItem
	GetAdminFuncControlReq              = control.GetAdminFuncControlReq
	GetAdminFuncControlResp             = control.GetAdminFuncControlResp
	GetAdminIdsByDepartmentControlReq   = control.GetAdminIdsByDepartmentControlReq
	GetAdminIdsByDepartmentControlResp  = control.GetAdminIdsByDepartmentControlResp
	GetAdminInfoByPhoneControlReq       = control.GetAdminInfoByPhoneControlReq
	GetAdminInfoByPhoneControlResp      = control.GetAdminInfoByPhoneControlResp
	GetAdminInfoByPhoneItem             = control.GetAdminInfoByPhoneItem
	GetAdminRoleListItem                = control.GetAdminRoleListItem
	GetAdminRoleListReq                 = control.GetAdminRoleListReq
	GetAdminRoleListResp                = control.GetAdminRoleListResp
	GetAdminRoleListRoleListItem        = control.GetAdminRoleListRoleListItem
	GetAuthTokenReq                     = control.GetAuthTokenReq
	GetAuthTokenResp                    = control.GetAuthTokenResp
	GetDeptDataControlReq               = control.GetDeptDataControlReq
	GetDeptDataControlResp              = control.GetDeptDataControlResp
	GetDeptJurisdictionAdminControlItem = control.GetDeptJurisdictionAdminControlItem
	GetDeptJurisdictionAdminControlReq  = control.GetDeptJurisdictionAdminControlReq
	GetDeptJurisdictionAdminControlResp = control.GetDeptJurisdictionAdminControlResp
	GetDeptProjectControlItem           = control.GetDeptProjectControlItem
	GetDeptProjectControlReq            = control.GetDeptProjectControlReq
	GetDeptProjectControlResp           = control.GetDeptProjectControlResp
	GetJurisdictionAdminFuncControlItem = control.GetJurisdictionAdminFuncControlItem
	GetJurisdictionAdminFuncControlReq  = control.GetJurisdictionAdminFuncControlReq
	GetJurisdictionAdminFuncControlResp = control.GetJurisdictionAdminFuncControlResp
	GetMenuAdminFuncControlItem         = control.GetMenuAdminFuncControlItem
	GetMenuAdminFuncControlReq          = control.GetMenuAdminFuncControlReq
	GetMenuAdminFuncControlResp         = control.GetMenuAdminFuncControlResp
	GetProjectFuncControlItem           = control.GetProjectFuncControlItem
	GetProjectFuncControlReq            = control.GetProjectFuncControlReq
	GetProjectFuncControlResp           = control.GetProjectFuncControlResp
	GetRoleDataControlReq               = control.GetRoleDataControlReq
	GetRoleDataControlResp              = control.GetRoleDataControlResp
	GetRoleJurisdictionAdminControlItem = control.GetRoleJurisdictionAdminControlItem
	GetRoleJurisdictionAdminControlReq  = control.GetRoleJurisdictionAdminControlReq
	GetRoleJurisdictionAdminControlResp = control.GetRoleJurisdictionAdminControlResp
	GetRoleProjectControlItem           = control.GetRoleProjectControlItem
	GetRoleProjectControlReq            = control.GetRoleProjectControlReq
	GetRoleProjectControlResp           = control.GetRoleProjectControlResp
	ParseAuthTokenReq                   = control.ParseAuthTokenReq
	ParseAuthTokenResp                  = control.ParseAuthTokenResp
	Ping                                = control.Ping
	Pong                                = control.Pong
	VerifyFuncControlReq                = control.VerifyFuncControlReq
	VerifyFuncControlResp               = control.VerifyFuncControlResp

	Control interface {
		// test
		Test(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
		// 生成token
		GetAuthToken(ctx context.Context, in *GetAuthTokenReq, opts ...grpc.CallOption) (*GetAuthTokenResp, error)
		// 解析token
		ParseAuthToken(ctx context.Context, in *ParseAuthTokenReq, opts ...grpc.CallOption) (*ParseAuthTokenResp, error)
		// 获取账号功能权限信息（页面功能）
		GetAdminFuncControl(ctx context.Context, in *GetAdminFuncControlReq, opts ...grpc.CallOption) (*GetAdminFuncControlResp, error)
		// 获取项目权限信息
		GetProjectFuncControl(ctx context.Context, in *GetProjectFuncControlReq, opts ...grpc.CallOption) (*GetProjectFuncControlResp, error)
		// 获取管辖员工权限
		GetJurisdictionAdminFunControl(ctx context.Context, in *GetJurisdictionAdminFuncControlReq, opts ...grpc.CallOption) (*GetJurisdictionAdminFuncControlResp, error)
		// 获取账号数据权限信息
		GetAdminDataControl(ctx context.Context, in *GetAdminDataControlReq, opts ...grpc.CallOption) (*GetAdminDataControlResp, error)
		// 获取账号菜单权限
		GetMenuAdminFuncControl(ctx context.Context, in *GetMenuAdminFuncControlReq, opts ...grpc.CallOption) (*GetMenuAdminFuncControlResp, error)
		// 通过手机号码获取账号信息
		GetAdminInfoByPhoneControl(ctx context.Context, in *GetAdminInfoByPhoneControlReq, opts ...grpc.CallOption) (*GetAdminInfoByPhoneControlResp, error)
		// 获取部门下的账号列表
		GetAdminIdsByDepartmentControl(ctx context.Context, in *GetAdminIdsByDepartmentControlReq, opts ...grpc.CallOption) (*GetAdminIdsByDepartmentControlResp, error)
		// 校验功能权限
		VerifyFuncControl(ctx context.Context, in *VerifyFuncControlReq, opts ...grpc.CallOption) (*VerifyFuncControlResp, error)
		// 获取角色管辖权限
		GetRoleJurisdictionAdminControl(ctx context.Context, in *GetRoleJurisdictionAdminControlReq, opts ...grpc.CallOption) (*GetRoleJurisdictionAdminControlResp, error)
		// 获取角色项目权限
		GetRoleProjectControl(ctx context.Context, in *GetRoleProjectControlReq, opts ...grpc.CallOption) (*GetRoleProjectControlResp, error)
		// 获取角色可见字段权限
		GetRoleDataControl(ctx context.Context, in *GetRoleDataControlReq, opts ...grpc.CallOption) (*GetRoleDataControlResp, error)
		// 获取部门管辖员工权限
		GetDeptJurisdictionAdminControl(ctx context.Context, in *GetDeptJurisdictionAdminControlReq, opts ...grpc.CallOption) (*GetDeptJurisdictionAdminControlResp, error)
		// 获取部门可见字段权限
		GetDeptDataControl(ctx context.Context, in *GetDeptDataControlReq, opts ...grpc.CallOption) (*GetDeptDataControlResp, error)
		// 获取部门管辖项目权限
		GetDeptProjectControl(ctx context.Context, in *GetDeptProjectControlReq, opts ...grpc.CallOption) (*GetDeptProjectControlResp, error)
		// 获取账号详情
		GetAdminDetail(ctx context.Context, in *GetAdminDetailReq, opts ...grpc.CallOption) (*GetAdminDetailResp, error)
		// 获取账号角色信息列表
		GetAdminRoleList(ctx context.Context, in *GetAdminRoleListReq, opts ...grpc.CallOption) (*GetAdminRoleListResp, error)
		// 检查是否公司员工
		CheckIsStaff(ctx context.Context, in *CheckStaffReq, opts ...grpc.CallOption) (*CheckStaffResp, error)
	}

	defaultControl struct {
		cli zrpc.Client
	}
)

func NewControl(cli zrpc.Client) Control {
	return &defaultControl{
		cli: cli,
	}
}

// test
func (m *defaultControl) Test(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}

// 生成token
func (m *defaultControl) GetAuthToken(ctx context.Context, in *GetAuthTokenReq, opts ...grpc.CallOption) (*GetAuthTokenResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAuthToken(ctx, in, opts...)
}

// 解析token
func (m *defaultControl) ParseAuthToken(ctx context.Context, in *ParseAuthTokenReq, opts ...grpc.CallOption) (*ParseAuthTokenResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.ParseAuthToken(ctx, in, opts...)
}

// 获取账号功能权限信息（页面功能）
func (m *defaultControl) GetAdminFuncControl(ctx context.Context, in *GetAdminFuncControlReq, opts ...grpc.CallOption) (*GetAdminFuncControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAdminFuncControl(ctx, in, opts...)
}

// 获取项目权限信息
func (m *defaultControl) GetProjectFuncControl(ctx context.Context, in *GetProjectFuncControlReq, opts ...grpc.CallOption) (*GetProjectFuncControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetProjectFuncControl(ctx, in, opts...)
}

// 获取管辖员工权限
func (m *defaultControl) GetJurisdictionAdminFunControl(ctx context.Context, in *GetJurisdictionAdminFuncControlReq, opts ...grpc.CallOption) (*GetJurisdictionAdminFuncControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetJurisdictionAdminFunControl(ctx, in, opts...)
}

// 获取账号数据权限信息
func (m *defaultControl) GetAdminDataControl(ctx context.Context, in *GetAdminDataControlReq, opts ...grpc.CallOption) (*GetAdminDataControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAdminDataControl(ctx, in, opts...)
}

// 获取账号菜单权限
func (m *defaultControl) GetMenuAdminFuncControl(ctx context.Context, in *GetMenuAdminFuncControlReq, opts ...grpc.CallOption) (*GetMenuAdminFuncControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetMenuAdminFuncControl(ctx, in, opts...)
}

// 通过手机号码获取账号信息
func (m *defaultControl) GetAdminInfoByPhoneControl(ctx context.Context, in *GetAdminInfoByPhoneControlReq, opts ...grpc.CallOption) (*GetAdminInfoByPhoneControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAdminInfoByPhoneControl(ctx, in, opts...)
}

// 获取部门下的账号列表
func (m *defaultControl) GetAdminIdsByDepartmentControl(ctx context.Context, in *GetAdminIdsByDepartmentControlReq, opts ...grpc.CallOption) (*GetAdminIdsByDepartmentControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAdminIdsByDepartmentControl(ctx, in, opts...)
}

// 校验功能权限
func (m *defaultControl) VerifyFuncControl(ctx context.Context, in *VerifyFuncControlReq, opts ...grpc.CallOption) (*VerifyFuncControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.VerifyFuncControl(ctx, in, opts...)
}

// 获取角色管辖权限
func (m *defaultControl) GetRoleJurisdictionAdminControl(ctx context.Context, in *GetRoleJurisdictionAdminControlReq, opts ...grpc.CallOption) (*GetRoleJurisdictionAdminControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetRoleJurisdictionAdminControl(ctx, in, opts...)
}

// 获取角色项目权限
func (m *defaultControl) GetRoleProjectControl(ctx context.Context, in *GetRoleProjectControlReq, opts ...grpc.CallOption) (*GetRoleProjectControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetRoleProjectControl(ctx, in, opts...)
}

// 获取角色可见字段权限
func (m *defaultControl) GetRoleDataControl(ctx context.Context, in *GetRoleDataControlReq, opts ...grpc.CallOption) (*GetRoleDataControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetRoleDataControl(ctx, in, opts...)
}

// 获取部门管辖员工权限
func (m *defaultControl) GetDeptJurisdictionAdminControl(ctx context.Context, in *GetDeptJurisdictionAdminControlReq, opts ...grpc.CallOption) (*GetDeptJurisdictionAdminControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetDeptJurisdictionAdminControl(ctx, in, opts...)
}

// 获取部门可见字段权限
func (m *defaultControl) GetDeptDataControl(ctx context.Context, in *GetDeptDataControlReq, opts ...grpc.CallOption) (*GetDeptDataControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetDeptDataControl(ctx, in, opts...)
}

// 获取部门管辖项目权限
func (m *defaultControl) GetDeptProjectControl(ctx context.Context, in *GetDeptProjectControlReq, opts ...grpc.CallOption) (*GetDeptProjectControlResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetDeptProjectControl(ctx, in, opts...)
}

// 获取账号详情
func (m *defaultControl) GetAdminDetail(ctx context.Context, in *GetAdminDetailReq, opts ...grpc.CallOption) (*GetAdminDetailResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAdminDetail(ctx, in, opts...)
}

// 获取账号角色信息列表
func (m *defaultControl) GetAdminRoleList(ctx context.Context, in *GetAdminRoleListReq, opts ...grpc.CallOption) (*GetAdminRoleListResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.GetAdminRoleList(ctx, in, opts...)
}

// 检查是否公司员工
func (m *defaultControl) CheckIsStaff(ctx context.Context, in *CheckStaffReq, opts ...grpc.CallOption) (*CheckStaffResp, error) {
	client := control.NewControlClient(m.cli.Conn())
	return client.CheckIsStaff(ctx, in, opts...)
}
